addRole(HouseholdWWDischarger);
addRole(HouseholdWWGenerator);
addRole(IndustrialWWDischarger);
addRole(IndustrialWWGenerator);
addRole(MeteoDataAcquirer);
addRole(MeteoDataProvider);
addRole(MeteoWWDischarger);
addRole(WWDataAcquirer);
addRole(WWDischarger);
addRole(WWGenerator);
addRole(WWQualityManager);
addRole(WWRetainer);
addRole(WWTreater);
addRole(WaterQualityAcquirer);
addDependency(D27, Hierarchy, WWQualityManager, WWTreater);
addDependency(D29, Market, WWTreater, IndustrialWWDischarger);
addDependency(D31, Hierarchy, HouseholdWWDischarger, WWTreater);
addDependency(D33, Network, MeteoWWDischarger, WWTreater);
addDependency(D37, Hierarchy, IndustrialWWGenerator, WWRetainer);
addDependency(D38, Hierarchy, MeteoDataAcquirer, MeteoDataProvider);
addDependency(D40, Hierarchy, WWDischarger, WWDataAcquirer);
addDependency(D41, Hierarchy, WWDischarger, WWRetainer);
addScene(end, "Default end scene of an interaction structure", end);
addScene(start, "Default start scene of an interaction structure", start);
addObjectiveRole(MakeProfit, IndustrialWWGenerator);
addObjectiveRole(ProduceProducts, IndustrialWWGenerator);
addObjectiveRole(WWGeneration, IndustrialWWGenerator);
addParentObjective(ProduceProducts, MakeProfit);
addParentObjective(WWGeneration, ProduceProducts);
addScene(S17, "", normal);
removeObjectiveRole(WWGeneration, IndustrialWWGenerator);
removeParentObjective(WWGeneration, ProduceProducts);
addObjectiveRole(AssessRiverWaterQuality, WaterQualityAcquirer);
addObjectiveRole(CollectRiverSensorsData, WaterQualityAcquirer);
addObjectiveRole(HouseholdWWGeneration, HouseholdWWGenerator);
addObjectiveRole(IndustrialWWGeneration, IndustrialWWGenerator);
addParentObjective(AssessRiverWaterQuality, SetWWTPEffluentLimits);
addParentObjective(CollectRiverSensorsData, AssessRiverWaterQuality);
addParentObjective(IndustrialWWGeneration, ProduceProducts);
addObjectiveRole(SetWWTPEffluentLimits, WaterQualityAcquirer);
addObjectiveRole(KnowEffluentLimits, WWTreater);
addObjectiveRole(SetWWTPInfluentLimits, WWTreater);
addObjectiveRole(WWTreatment, WWTreater);
addParentObjective(KnowEffluentLimits, SetWWTPInfluentLimits);
removeRole(WaterQualityAcquirer);
removeObjectiveRole(AssessRiverWaterQuality, WaterQualityAcquirer);
removeObjectiveRole(CollectRiverSensorsData, WaterQualityAcquirer);
removeObjectiveRole(SetWWTPEffluentLimits, WaterQualityAcquirer);
removeDependency(D29, Market, WWTreater, IndustrialWWDischarger);
removeDependency(D31, Hierarchy, HouseholdWWDischarger, WWTreater);
removeDependency(D33, Network, MeteoWWDischarger, WWTreater);
addRole(TreatementPerformanceDataAcquirer);
addRole(WWReceiver);
addRole(WaterQualityManager);
addObjectiveRole(AssessRiverWaterQuality, WWQualityManager);
addObjectiveRole(AssessRiverWaterQuality, WaterQualityManager);
addObjectiveRole(CollectRiverSensorsData, WWQualityManager);
addObjectiveRole(CollectRiverSensorsData, WaterQualityManager);
addObjectiveRole(SetWWTPEffluentLimits, WWQualityManager);
addParentObjective(AssessRiverWaterQuality, AchieveQualityWater);
addParentObjective(SetWWTPEffluentLimits, AchieveQualityWater);
addDependency(D11, Hierarchy, WWTreater, WWReceiver);
addDependency(D24, Hierarchy, WaterQualityManager, WWQualityManager);
addDependency(D29, Market, WWReceiver, IndustrialWWDischarger);
addDependency(D31, Hierarchy, HouseholdWWDischarger, WWReceiver);
addDependency(D33, Network, MeteoWWDischarger, WWReceiver);
removeDependency(D27, Hierarchy, WWQualityManager, WWTreater);
addObjectiveRole(AchieveQualityWater, WaterQualityManager);
addObjectiveRole(SetWWTPEffluentLimits, WaterQualityManager);
addParentObjective(AssessTreatementPerformance, AchieveOptimalPerformance);
addParentObjective(SetWWTPInfluentLimits, AchieveOptimalPerformance);
addDependency(D53, Hierarchy, WWTreater, TreatementPerformanceDataAcquirer);
removeRole(MeteoDataAcquirer);
removeDependency(D38, Hierarchy, MeteoDataAcquirer, MeteoDataProvider);
addDependency(D176, Hierarchy, WaterQualityManager, MeteoDataProvider);
addObjectiveRole(AcquireMeteorologicalData, WWQualityManager);
addObjectiveRole(AcquireMeteorologicalData, WaterQualityManager);
addObjectiveRole(ObtainMeteoData, MeteoDataProvider);
addParentObjective(AcquireMeteorologicalData, SetWWTPEffluentLimits);
removeObjectiveRole(AcquireMeteorologicalData, WWQualityManager);
removeObjectiveRole(AcquireMeteorologicalData, WaterQualityManager);
removeParentObjective(AcquireMeteorologicalData, SetWWTPEffluentLimits);
addObjectiveRole(ObtainMeteoData, WWQualityManager);
addObjectiveRole(ObtainMeteoData, WaterQualityManager);
addParentObjective(ObtainMeteoData, SetWWTPEffluentLimits);
removeObjectiveRole(KnowEffluentLimits, WWTreater);
removeParentObjective(KnowEffluentLimits, SetWWTPInfluentLimits);
addObjectiveRole(AchieveOptimalPerformance, WWTreater);
addObjectiveRole(AssessTreatementPerformance, WWTreater);
addObjectiveRole(AskWWTPInfluentUnderLimits, WWTreater);
removeObjectiveRole(AskWWTPInfluentUnderLimits, WWTreater);
addObjectiveRole(ManageWWTPInfluents, WWReceiver);
addObjectiveRole(ManageWWTPInfluents, WWTreater);
removeObjectiveRole(ManageWWTPInfluents, WWReceiver);
removeObjectiveRole(ManageWWTPInfluents, WWTreater);
removeObjectiveRole(ProduceProducts, IndustrialWWGenerator);
removeParentObjective(IndustrialWWGeneration, ProduceProducts);
removeParentObjective(ProduceProducts, MakeProfit);
addObjectiveRole(IndustrialWWGeneration, IndustrialWWDischarger);
addObjectiveRole(MakeProfit, IndustrialWWDischarger);
addObjectiveRole(ManageWWInfluents, WWReceiver);
addObjectiveRole(ManageWWInfluents, WWTreater);
addParentObjective(IndustrialWWGeneration, MakeProfit);
removeObjectiveRole(SetWWTPInfluentLimits, WWTreater);
removeParentObjective(SetWWTPInfluentLimits, AchieveOptimalPerformance);
addObjectiveRole(DetermineDischargePrices, WWReceiver);
addObjectiveRole(DetermineDischargePrices, WWTreater);
addObjectiveRole(DetermineWWInfluentLimits, WWReceiver);
addObjectiveRole(DetermineWWInfluentLimits, WWTreater);
addParentObjective(DetermineDischargePrices, ManageWWInfluents);
addParentObjective(DetermineWWInfluentLimits, AchieveOptimalPerformance);
removeObjectiveRole(IndustrialWWGeneration, IndustrialWWDischarger);
removeObjectiveRole(MakeProfit, IndustrialWWDischarger);
addRole(SewageInspector);
addObjectiveRole(VerifyDischarge, SewageInspector);
addObjectiveRole(obtainDischargeAgreement, SewageInspector);
addObjectiveRole(obtainDischargePollutantLoads, SewageInspector);
addObjectiveRole(obtainDischargeVolume, SewageInspector);
addParentObjective(obtainDischargeAgreement, VerifyDischarge);
addParentObjective(obtainDischargePollutantLoads, VerifyDischarge);
addParentObjective(obtainDischargeVolume, VerifyDischarge);
addDependency(D659, Hierarchy, SewageInspector, IndustrialWWDischarger);
addDependency(D660, Hierarchy, SewageInspector, WWReceiver);
removeScene(S17);
removeScene(end);
removeScene(start);
addObjectiveRole(dischargeWW, WWDischarger);
removeObjectiveRole(dischargeWW, WWDischarger);
addObjectiveRole(dischargeInRiver, MeteoWWDischarger);
addObjectiveRole(dischargeInSewer, MeteoWWDischarger);
removeObjectiveRole(dischargeInSewer, MeteoWWDischarger);
addObjectiveRole(dischargeInSewer, WWDischarger);
addObjectiveRole(ObtainWWTPPerformanceData, TreatementPerformanceDataAcquirer);
addObjectiveRole(ObtainWWPollutantConcentration, WWDataAcquirer);
addObjectiveRole(ObtainWWVolume, WWDataAcquirer);
removeDependency(D40, Hierarchy, WWDischarger, WWDataAcquirer);
addParentObjective(ObtainWWPollutantConcentration, ObtainWWComposition);
addDependency(D40, Hierarchy, MeteoWWDischarger, WWDataAcquirer);
addDependency(D970, Market, IndustrialWWDischarger, WWDataAcquirer);
addDependency(D971, Hierarchy, HouseholdWWDischarger, WWDataAcquirer);
addParentObjective(ObtainWWVolume, ObtainWWComposition);
removeParentObjective(ObtainWWPollutantConcentration, ObtainWWComposition);
removeParentObjective(ObtainWWVolume, ObtainWWComposition);
addObjectiveRole(DischargeIndustrialWW, IndustrialWWDischarger);
addObjectiveRole(ObtainWWCharacteristics, MeteoWWDischarger);
addObjectiveRole(ObtainWWPollutantConcentration, MeteoWWDischarger);
addObjectiveRole(ObtainWWVolume, MeteoWWDischarger);
addObjectiveRole(dischargeInSewer, MeteoWWDischarger);
addParentObjective(ObtainWWCharacteristics, dischargeInRiver);
addParentObjective(ObtainWWPollutantConcentration, ObtainWWCharacteristics);
addParentObjective(ObtainWWVolume, ObtainWWCharacteristics);
addParentObjective(AssessRiverWaterQuality, EstablishDischargeReferencePrice);
addParentObjective(DetermineDischargePrices, ObtainDischargeCost);
addParentObjective(ObtainWWCharacteristics, ObtainDischargeCost);
addParentObjective(ObtainWWTPPerformanceData, EstablishDischargeReferencePrice);
removeParentObjective(AssessRiverWaterQuality, EstablishDischargeReferencePrice);
removeParentObjective(ObtainWWTPPerformanceData, EstablishDischargeReferencePrice);
addObjectiveRole(AssessRiverWaterQuality, WWDischarger);
addObjectiveRole(AssessRiverWaterQuality, WWReceiver);
addObjectiveRole(CollectRiverSensorsData, WWDischarger);
addObjectiveRole(CollectRiverSensorsData, WWReceiver);
addObjectiveRole(ObtainDischargeReferencePrice, WWDischarger);
addObjectiveRole(ObtainDischargeReferencePrice, WWReceiver);
addObjectiveRole(ObtainDischargeReferencePrice, WaterQualityManager);
addObjectiveRole(ObtainWWTPPerformanceData, WWDischarger);
addObjectiveRole(ObtainWWTPPerformanceData, WWReceiver);
addObjectiveRole(ObtainWWTPPerformanceData, WaterQualityManager);
addParentObjective(AssessRiverWaterQuality, ObtainDischargeReferencePrice);
addParentObjective(ObtainWWTPPerformanceData, ObtainDischargeReferencePrice);
addDependency(D1337, Hierarchy, WWReceiver, WaterQualityManager);
addDependency(D1338, Hierarchy, WWDischarger, WaterQualityManager);
addObjectiveRole(AssessRiverWaterQuality, WWTreater);
addObjectiveRole(CollectRiverSensorsData, WWTreater);
addObjectiveRole(ObtainDischargeReferencePrice, WWTreater);
addObjectiveRole(ObtainWWTPPerformanceData, WWTreater);
addParentObjective(ObtainDischargeReferencePrice, DetermineDischargePrices);
removeObjectiveRole(ObtainWWTPPerformanceData, TreatementPerformanceDataAcquirer);
removeObjectiveRole(ObtainWWTPPerformanceData, WWDischarger);
removeObjectiveRole(ObtainWWTPPerformanceData, WWReceiver);
removeObjectiveRole(ObtainWWTPPerformanceData, WWTreater);
removeObjectiveRole(ObtainWWTPPerformanceData, WaterQualityManager);
removeParentObjective(ObtainWWTPPerformanceData, ObtainDischargeReferencePrice);
addObjectiveRole(ObtainPerformanceData, TreatementPerformanceDataAcquirer);
addObjectiveRole(ObtainPerformanceData, WWDischarger);
addObjectiveRole(ObtainPerformanceData, WWReceiver);
addObjectiveRole(ObtainPerformanceData, WWTreater);
addObjectiveRole(ObtainPerformanceData, WaterQualityManager);
addParentObjective(ObtainPerformanceData, ObtainDischargeReferencePrice);
addDependency(D1489, Hierarchy, WWReceiver, TreatementPerformanceDataAcquirer);
addParentObjective(DetermineWWInfluentLimits, ManageWWInfluents);
addObjectiveRole(ObtainHouseholdWWCharacteristics, HouseholdWWDischarger);
addObjectiveRole(ObtainHouseholdWWCharacteristics, WWReceiver);
addObjectiveRole(ObtainHouseholdWWCharacteristics, WWTreater);
addObjectiveRole(ObtainMeteoWWCharacteristics, MeteoWWDischarger);
addObjectiveRole(ObtainWWCharacteristics, HouseholdWWDischarger);
addObjectiveRole(ObtainWWCharacteristics, WWReceiver);
addObjectiveRole(ObtainWWCharacteristics, WWTreater);
addObjectiveRole(ObtainWWPollutantConcentration, HouseholdWWDischarger);
addObjectiveRole(ObtainWWPollutantConcentration, WWReceiver);
addObjectiveRole(ObtainWWPollutantConcentration, WWTreater);
addObjectiveRole(ObtainWWVolume, HouseholdWWDischarger);
addObjectiveRole(ObtainWWVolume, WWReceiver);
addObjectiveRole(ObtainWWVolume, WWTreater);
addParentObjective(ObtainHouseholdWWCharacteristics, DetermineWWInfluentLimits);
addParentObjective(ObtainWWCharacteristics, ObtainHouseholdWWCharacteristics);
addParentObjective(ObtainWWCharacteristics, ObtainMeteoWWCharacteristics);
addObjectiveRole(ObtainMeteoWWCharacteristics, WWReceiver);
addObjectiveRole(ObtainMeteoWWCharacteristics, WWTreater);
addParentObjective(ObtainMeteoWWCharacteristics, DetermineWWInfluentLimits);
removeRole(WWGenerator);
addObjectiveRole(ObtainVolumetricSaturationDegree, WWReceiver);
addObjectiveRole(ObtainVolumetricSaturationDegree, WWTreater);
addObjectiveRole(StoreWW, WWRetainer);
addParentObjective(ObtainVolumetricSaturationDegree, DetermineDischargePrices);
removeDependency(D31, Hierarchy, HouseholdWWDischarger, WWReceiver);
addDependency(D1909, Hierarchy, WWReceiver, HouseholdWWDischarger);
removeObjectiveRole(dischargeInRiver, MeteoWWDischarger);
removeRole(TreatementPerformanceDataAcquirer);
removeObjectiveRole(ObtainPerformanceData, TreatementPerformanceDataAcquirer);
removeDependency(D1489, Hierarchy, WWReceiver, TreatementPerformanceDataAcquirer);
removeDependency(D53, Hierarchy, WWTreater, TreatementPerformanceDataAcquirer);
addRole(WWTPDischarger);
addObjectiveRole(ObtainPerformanceData, WWTPDischarger);
addParentObjective(ObtainInfluentCharacteristics, CalculateTreatementEfficiency);
addDependency(D1489, Hierarchy, WWReceiver, WWTPDischarger);
addDependency(D53, Hierarchy, WWTreater, WWTPDischarger);
addParentObjective(ObtainEffluentCharacteristics, CalculateTreatementEfficiency);
removeParentObjective(ObtainWWCharacteristics, dischargeInRiver);
addParentObjective(bypassInfluent, processInfluent);
addParentObjective(treatInfluent, processInfluent);
addObjectiveRole(ObtainInfluentCharacteristics, WWReceiver);
addObjectiveRole(bypassInfluent, WWReceiver);
addObjectiveRole(processInfluent, WWReceiver);
addObjectiveRole(treatInfluent, WWReceiver);
addParentObjective(ObtainInfluentCharacteristics, processInfluent);
removeRole(WWQualityManager);
removeObjectiveRole(AssessRiverWaterQuality, WWQualityManager);
removeObjectiveRole(CollectRiverSensorsData, WWQualityManager);
removeObjectiveRole(ObtainMeteoData, WWQualityManager);
removeObjectiveRole(SetWWTPEffluentLimits, WWQualityManager);
removeObjectiveRole(SetWWTPEffluentLimits, WaterQualityManager);
removeParentObjective(AssessRiverWaterQuality, SetWWTPEffluentLimits);
removeParentObjective(ObtainMeteoData, SetWWTPEffluentLimits);
removeParentObjective(SetWWTPEffluentLimits, AchieveQualityWater);
removeDependency(D24, Hierarchy, WaterQualityManager, WWQualityManager);
addObjectiveRole(EnsureWWTPEffluentLimits, WaterQualityManager);
addParentObjective(AssessRiverWaterQuality, EnsureWWTPEffluentLimits);
addParentObjective(EnsureWWTPEffluentLimits, AchieveQualityWater);
addParentObjective(ObtainMeteoData, EnsureWWTPEffluentLimits);
addDependency(D710, Hierarchy, WaterQualityManager, WWTPDischarger);
addDependencyObjective(D710, EnsureWWTPEffluentLimits);
removeObjectiveRole(EnsureWWTPEffluentLimits, WaterQualityManager);
removeParentObjective(AssessRiverWaterQuality, EnsureWWTPEffluentLimits);
removeParentObjective(EnsureWWTPEffluentLimits, AchieveQualityWater);
removeParentObjective(ObtainMeteoData, EnsureWWTPEffluentLimits);
removeDependencyObjective(D710, EnsureWWTPEffluentLimits);
addObjectiveRole(AssessRiverWaterQuality, WWTPDischarger);
addObjectiveRole(CalculateWWTPEffluentLimits, WWTPDischarger);
addObjectiveRole(CalculateWWTPEffluentLimits, WaterQualityManager);
addObjectiveRole(CollectRiverSensorsData, WWTPDischarger);
addObjectiveRole(EnsureEffluentLimits, WaterQualityManager);
addObjectiveRole(ObtainMeteoData, WWTPDischarger);
addParentObjective(AssessRiverWaterQuality, CalculateWWTPEffluentLimits);
addParentObjective(CalculateWWTPEffluentLimits, AchieveQualityWater);
addParentObjective(EnsureEffluentLimits, AchieveQualityWater);
addParentObjective(ObtainMeteoData, CalculateWWTPEffluentLimits);
addDependencyObjective(D710, CalculateWWTPEffluentLimits);
removeRole(MeteoWWDischarger);
removeRole(WWRetainer);
removeObjectiveRole(ObtainMeteoWWCharacteristics, MeteoWWDischarger);
removeObjectiveRole(ObtainWWCharacteristics, MeteoWWDischarger);
removeObjectiveRole(ObtainWWPollutantConcentration, MeteoWWDischarger);
removeObjectiveRole(ObtainWWVolume, MeteoWWDischarger);
removeObjectiveRole(StoreWW, WWRetainer);
removeObjectiveRole(dischargeInSewer, MeteoWWDischarger);
removeDependency(D11, Hierarchy, WWTreater, WWReceiver);
removeDependency(D1337, Hierarchy, WWReceiver, WaterQualityManager);
removeDependency(D1338, Hierarchy, WWDischarger, WaterQualityManager);
removeDependency(D1489, Hierarchy, WWReceiver, WWTPDischarger);
removeDependency(D176, Hierarchy, WaterQualityManager, MeteoDataProvider);
removeDependency(D1909, Hierarchy, WWReceiver, HouseholdWWDischarger);
removeDependency(D29, Market, WWReceiver, IndustrialWWDischarger);
removeDependency(D33, Network, MeteoWWDischarger, WWReceiver);
removeDependency(D37, Hierarchy, IndustrialWWGenerator, WWRetainer);
removeDependency(D40, Hierarchy, MeteoWWDischarger, WWDataAcquirer);
removeDependency(D41, Hierarchy, WWDischarger, WWRetainer);
removeDependency(D53, Hierarchy, WWTreater, WWTPDischarger);
removeDependency(D659, Hierarchy, SewageInspector, IndustrialWWDischarger);
removeDependency(D660, Hierarchy, SewageInspector, WWReceiver);
removeDependency(D710, Hierarchy, WaterQualityManager, WWTPDischarger);
removeDependency(D970, Market, IndustrialWWDischarger, WWDataAcquirer);
removeDependency(D971, Hierarchy, HouseholdWWDischarger, WWDataAcquirer);
removeDependencyObjective(D710, CalculateWWTPEffluentLimits);
addRole(IndustrialWWRetainer);
addRole(MeteoDischarger);
addRole(MeteoRetainer);
addObjectiveRole(ObtainMeteoWWCharacteristics, MeteoRetainer);
addObjectiveRole(ObtainWWCharacteristics, MeteoRetainer);
addObjectiveRole(ObtainWWPollutantConcentration, MeteoRetainer);
addObjectiveRole(ObtainWWVolume, MeteoRetainer);
addObjectiveRole(StoreWW, IndustrialWWRetainer);
addObjectiveRole(dischargeInSewer, MeteoRetainer);
removeObjectiveRole(ObtainHouseholdWWCharacteristics, HouseholdWWDischarger);
removeObjectiveRole(ObtainHouseholdWWCharacteristics, WWReceiver);
removeObjectiveRole(ObtainHouseholdWWCharacteristics, WWTreater);
removeParentObjective(ObtainHouseholdWWCharacteristics, DetermineWWInfluentLimits);
removeParentObjective(ObtainWWCharacteristics, ObtainHouseholdWWCharacteristics);
addObjectiveRole(EvaluateHouseholdWWGeneration, HouseholdWWDischarger);
addObjectiveRole(EvaluateHouseholdWWGeneration, WWReceiver);
addObjectiveRole(EvaluateHouseholdWWGeneration, WWTreater);
addParentObjective(EvaluateHouseholdWWGeneration, DetermineWWInfluentLimits);
addParentObjective(ObtainWWCharacteristics, EvaluateHouseholdWWGeneration);
removeRole(HouseholdWWGenerator);
removeObjectiveRole(HouseholdWWGeneration, HouseholdWWGenerator);
addObjectiveRole(ManageIndustrialWW, IndustrialWWGenerator);
addParentObjective(ManageIndustrialWW, MakeProfit);
addObjectiveRole(StoreIndustrialWW, IndustrialWWGenerator);
addObjectiveRole(dischargeIndustrialWW, IndustrialWWGenerator);
addParentObjective(StoreIndustrialWW, ManageIndustrialWW);
addParentObjective(dischargeIndustrialWW, ManageIndustrialWW);
addDependency(D1092, Hierarchy, IndustrialWWGenerator, IndustrialWWRetainer);
addDependencyObjective(D1092, ManageIndustrialWW);
removeObjectiveRole(ManageIndustrialWW, IndustrialWWGenerator);
removeObjectiveRole(dischargeIndustrialWW, IndustrialWWGenerator);
removeParentObjective(ManageIndustrialWW, MakeProfit);
removeParentObjective(StoreIndustrialWW, ManageIndustrialWW);
removeParentObjective(dischargeIndustrialWW, ManageIndustrialWW);
removeDependency(D1092, Hierarchy, IndustrialWWGenerator, IndustrialWWRetainer);
removeDependencyObjective(D1092, ManageIndustrialWW);
addObjectiveRole(DischargeIndustrialWW, IndustrialWWRetainer);
addParentObjective(StoreIndustrialWW, MakeProfit);
addDependency(D1146, Hierarchy, IndustrialWWGenerator, IndustrialWWRetainer);
addDependency(D1147, Hierarchy, IndustrialWWRetainer, IndustrialWWDischarger);
addDependencyObjective(D1146, StoreIndustrialWW);
addDependencyObjective(D1147, DischargeIndustrialWW);
addDependency(D1151, Market, IndustrialWWDischarger, WWReceiver);
addDependencyObjective(D1151, DischargeIndustrialWW);
addObjectiveRole(AssessRiverWaterQuality, IndustrialWWDischarger);
addObjectiveRole(CollectRiverSensorsData, IndustrialWWDischarger);
addObjectiveRole(DetermineDischargePrices, IndustrialWWDischarger);
addObjectiveRole(ObtainDischargeCost, IndustrialWWDischarger);
addObjectiveRole(ObtainDischargeReferencePrice, IndustrialWWDischarger);
addObjectiveRole(ObtainPerformanceData, IndustrialWWDischarger);
addObjectiveRole(ObtainVolumetricSaturationDegree, IndustrialWWDischarger);
addObjectiveRole(ObtainWWCharacteristics, IndustrialWWDischarger);
addObjectiveRole(ObtainWWPollutantConcentration, IndustrialWWDischarger);
addObjectiveRole(ObtainWWVolume, IndustrialWWDischarger);
removeRole(WaterQualityManager);
removeObjectiveRole(AchieveQualityWater, WaterQualityManager);
removeObjectiveRole(AssessRiverWaterQuality, WaterQualityManager);
removeObjectiveRole(CalculateWWTPEffluentLimits, WaterQualityManager);
removeObjectiveRole(CollectRiverSensorsData, WaterQualityManager);
removeObjectiveRole(EnsureEffluentLimits, WaterQualityManager);
removeObjectiveRole(ObtainDischargeReferencePrice, WaterQualityManager);
removeObjectiveRole(ObtainMeteoData, WaterQualityManager);
removeObjectiveRole(ObtainPerformanceData, WaterQualityManager);
addRole(RiverQualityManager);
addObjectiveRole(AchieveQualityWater, RiverQualityManager);
addObjectiveRole(AssessRiverWaterQuality, RiverQualityManager);
addObjectiveRole(CalculateWWTPEffluentLimits, RiverQualityManager);
addObjectiveRole(CollectRiverSensorsData, RiverQualityManager);
addObjectiveRole(EnsureEffluentLimits, RiverQualityManager);
addObjectiveRole(ObtainDischargeReferencePrice, RiverQualityManager);
addObjectiveRole(ObtainMeteoData, RiverQualityManager);
addObjectiveRole(ObtainPerformanceData, RiverQualityManager);
removeDependencyObjective(D1151, DischargeIndustrialWW);
addObjectiveRole(AssessAmountOfIndustrialWWDischarge, IndustrialWWDischarger);
addDependencyObjective(D1151, AssessAmountOfIndustrialWWDischarge);
addObjectiveRole(DischargeHouseholdWW, HouseholdWWDischarger);
removeRole(WWDischarger);
removeObjectiveRole(AssessRiverWaterQuality, WWDischarger);
removeObjectiveRole(CollectRiverSensorsData, WWDischarger);
removeObjectiveRole(ObtainDischargeReferencePrice, WWDischarger);
removeObjectiveRole(ObtainPerformanceData, WWDischarger);
removeObjectiveRole(dischargeInSewer, MeteoRetainer);
removeObjectiveRole(dischargeInSewer, WWDischarger);
addObjectiveRole(AssessMeteoWWDestination, MeteoDischarger);
addObjectiveRole(AssessMeteoWWDestination, MeteoRetainer);
addObjectiveRole(DischargeMeteoWW, MeteoDischarger);
addObjectiveRole(DischargeMeteoWW, MeteoRetainer);
addObjectiveRole(StoreWW, MeteoRetainer);
addParentObjective(AssessMeteoWWDestination, DischargeMeteoWW);
addDependency(D1464, Hierarchy, MeteoRetainer, MeteoDischarger);
addDependency(D1465, Hierarchy, MeteoDischarger, WWReceiver);
addDependencyObjective(D1464, DischargeMeteoWW);
addDependencyObjective(D1465, AssessMeteoWWDestination);
removeObjectiveRole(EvaluateHouseholdWWGeneration, HouseholdWWDischarger);
removeObjectiveRole(EvaluateHouseholdWWGeneration, WWReceiver);
removeObjectiveRole(EvaluateHouseholdWWGeneration, WWTreater);
removeParentObjective(EvaluateHouseholdWWGeneration, DetermineWWInfluentLimits);
removeParentObjective(ObtainWWCharacteristics, EvaluateHouseholdWWGeneration);
addObjectiveRole(EvaluateHouseholdWWCharacteristics, HouseholdWWDischarger);
addObjectiveRole(EvaluateHouseholdWWCharacteristics, WWReceiver);
addObjectiveRole(EvaluateHouseholdWWCharacteristics, WWTreater);
addParentObjective(EvaluateHouseholdWWCharacteristics, DetermineWWInfluentLimits);
addParentObjective(ObtainWWCharacteristics, EvaluateHouseholdWWCharacteristics);
addDependency(D1483, Hierarchy, WWReceiver, HouseholdWWDischarger);
addDependencyObjective(D1483, EvaluateHouseholdWWCharacteristics);
removeObjectiveRole(DetermineWWInfluentLimits, WWReceiver);
removeObjectiveRole(DetermineWWInfluentLimits, WWTreater);
removeObjectiveRole(EvaluateHouseholdWWCharacteristics, HouseholdWWDischarger);
removeObjectiveRole(EvaluateHouseholdWWCharacteristics, WWReceiver);
removeObjectiveRole(EvaluateHouseholdWWCharacteristics, WWTreater);
removeObjectiveRole(ObtainMeteoWWCharacteristics, MeteoRetainer);
removeObjectiveRole(ObtainMeteoWWCharacteristics, WWReceiver);
removeObjectiveRole(ObtainMeteoWWCharacteristics, WWTreater);
removeParentObjective(DetermineWWInfluentLimits, AchieveOptimalPerformance);
removeParentObjective(DetermineWWInfluentLimits, ManageWWInfluents);
removeParentObjective(EvaluateHouseholdWWCharacteristics, DetermineWWInfluentLimits);
removeParentObjective(ObtainMeteoWWCharacteristics, DetermineWWInfluentLimits);
removeParentObjective(ObtainWWCharacteristics, EvaluateHouseholdWWCharacteristics);
removeParentObjective(ObtainWWCharacteristics, ObtainMeteoWWCharacteristics);
removeDependencyObjective(D1483, EvaluateHouseholdWWCharacteristics);
addObjectiveRole(DetermineWWInfluentAvailability, WWReceiver);
addObjectiveRole(DetermineWWInfluentAvailability, WWTreater);
addObjectiveRole(EvaluateMeteoWWCharacteristics, MeteoRetainer);
addObjectiveRole(EvaluateMeteoWWCharacteristics, WWReceiver);
addObjectiveRole(EvaluateMeteoWWCharacteristics, WWTreater);
addObjectiveRole(ObtainHouseholdWWCharacteristics, HouseholdWWDischarger);
addObjectiveRole(ObtainHouseholdWWCharacteristics, WWReceiver);
addObjectiveRole(ObtainHouseholdWWCharacteristics, WWTreater);
addObjectiveRole(ObtainWWInfluentLimits, WWReceiver);
addObjectiveRole(ObtainWWInfluentLimits, WWTreater);
addParentObjective(DetermineWWInfluentAvailability, AchieveOptimalPerformance);
addParentObjective(DetermineWWInfluentAvailability, ManageWWInfluents);
addParentObjective(EvaluateMeteoWWCharacteristics, DetermineWWInfluentAvailability);
addParentObjective(ObtainHouseholdWWCharacteristics, DetermineWWInfluentAvailability);
addParentObjective(ObtainWWCharacteristics, EvaluateMeteoWWCharacteristics);
addParentObjective(ObtainWWCharacteristics, ObtainHouseholdWWCharacteristics);
addParentObjective(ObtainWWInfluentLimits, DetermineWWInfluentAvailability);
addDependency(D1514, Hierarchy, WWReceiver, RiverQualityManager);
addDependencyObjective(D1483, ObtainHouseholdWWCharacteristics);
removeObjectiveRole(DetermineWWInfluentAvailability, WWReceiver);
removeObjectiveRole(DetermineWWInfluentAvailability, WWTreater);
removeObjectiveRole(EvaluateMeteoWWCharacteristics, MeteoRetainer);
removeObjectiveRole(EvaluateMeteoWWCharacteristics, WWReceiver);
removeObjectiveRole(EvaluateMeteoWWCharacteristics, WWTreater);
removeObjectiveRole(ObtainWWInfluentLimits, WWReceiver);
removeObjectiveRole(ObtainWWInfluentLimits, WWTreater);
removeParentObjective(DetermineWWInfluentAvailability, AchieveOptimalPerformance);
removeParentObjective(DetermineWWInfluentAvailability, ManageWWInfluents);
removeParentObjective(EvaluateMeteoWWCharacteristics, DetermineWWInfluentAvailability);
removeParentObjective(ObtainHouseholdWWCharacteristics, DetermineWWInfluentAvailability);
removeParentObjective(ObtainWWCharacteristics, EvaluateMeteoWWCharacteristics);
removeParentObjective(ObtainWWInfluentLimits, DetermineWWInfluentAvailability);
addObjectiveRole(CalculateIndustrialWWInfluentAvailability, WWReceiver);
addObjectiveRole(CalculateIndustrialWWInfluentAvailability, WWTreater);
addObjectiveRole(ObtainIndustrialWWCharacteristics, WWReceiver);
addObjectiveRole(ObtainIndustrialWWCharacteristics, WWTreater);
addObjectiveRole(ObtainMeteoWWCharacteristics, MeteoRetainer);
addObjectiveRole(ObtainMeteoWWCharacteristics, WWReceiver);
addObjectiveRole(ObtainMeteoWWCharacteristics, WWTreater);
addObjectiveRole(ObtainWWTotalLimits, WWReceiver);
addObjectiveRole(ObtainWWTotalLimits, WWTreater);
addParentObjective(CalculateIndustrialWWInfluentAvailability, AchieveOptimalPerformance);
addParentObjective(CalculateIndustrialWWInfluentAvailability, ManageWWInfluents);
addParentObjective(ObtainHouseholdWWCharacteristics, CalculateIndustrialWWInfluentAvailability);
addParentObjective(ObtainIndustrialWWCharacteristics, CalculateIndustrialWWInfluentAvailability);
addParentObjective(ObtainMeteoWWCharacteristics, CalculateIndustrialWWInfluentAvailability);
addParentObjective(ObtainWWCharacteristics, ObtainMeteoWWCharacteristics);
addParentObjective(ObtainWWTotalLimits, CalculateIndustrialWWInfluentAvailability);
addDependency(D1549, Hierarchy, WWReceiver, IndustrialWWDischarger);
addDependencyObjective(D1549, ObtainIndustrialWWCharacteristics);
addDependency(D1561, Hierarchy, WWReceiver, MeteoDischarger);
addDependencyObjective(D1561, ObtainMeteoWWCharacteristics);
removeParentObjective(ObtainIndustrialWWCharacteristics, CalculateIndustrialWWInfluentAvailability);
addObjectiveRole(ObtainIndustrialWWCharacteristics, IndustrialWWDischarger);
addParentObjective(ObtainIndustrialWWCharacteristics, DetermineDischargePrices);
addParentObjective(ObtainIndustrialWWCharacteristics, ManageWWInfluents);
removeObjectiveRole(ManageWWInfluents, WWReceiver);
removeObjectiveRole(ManageWWInfluents, WWTreater);
removeObjectiveRole(ObtainVolumetricSaturationDegree, IndustrialWWDischarger);
removeObjectiveRole(ObtainVolumetricSaturationDegree, WWReceiver);
removeObjectiveRole(ObtainVolumetricSaturationDegree, WWTreater);
removeParentObjective(CalculateIndustrialWWInfluentAvailability, ManageWWInfluents);
removeParentObjective(DetermineDischargePrices, ManageWWInfluents);
removeParentObjective(ObtainIndustrialWWCharacteristics, ManageWWInfluents);
removeParentObjective(ObtainVolumetricSaturationDegree, DetermineDischargePrices);
addObjectiveRole(ManageWWTPInfluent, WWReceiver);
addObjectiveRole(ManageWWTPInfluent, WWTreater);
addObjectiveRole(ObtainTreatmentEfficiency, IndustrialWWDischarger);
addObjectiveRole(ObtainTreatmentEfficiency, WWReceiver);
addObjectiveRole(ObtainTreatmentEfficiency, WWTreater);
addParentObjective(CalculateIndustrialWWInfluentAvailability, ManageWWTPInfluent);
addParentObjective(DetermineDischargePrices, ManageWWTPInfluent);
addParentObjective(ObtainIndustrialWWCharacteristics, ManageWWTPInfluent);
addParentObjective(ObtainTreatmentEfficiency, DetermineDischargePrices);
addDependency(D1616, Hierarchy, WWReceiver, WWTPDischarger);
addDependencyObjective(D1514, ObtainDischargeReferencePrice);
addDependencyObjective(D1616, ObtainTreatmentEfficiency);
removeObjectiveRole(DetermineDischargePrices, IndustrialWWDischarger);
removeObjectiveRole(DetermineDischargePrices, WWReceiver);
removeObjectiveRole(DetermineDischargePrices, WWTreater);
removeObjectiveRole(ObtainDischargeReferencePrice, IndustrialWWDischarger);
removeObjectiveRole(ObtainDischargeReferencePrice, RiverQualityManager);
removeObjectiveRole(ObtainDischargeReferencePrice, WWReceiver);
removeObjectiveRole(ObtainDischargeReferencePrice, WWTreater);
removeObjectiveRole(ObtainInfluentCharacteristics, WWReceiver);
removeObjectiveRole(treatInfluent, WWReceiver);
removeParentObjective(AssessRiverWaterQuality, ObtainDischargeReferencePrice);
removeParentObjective(DetermineDischargePrices, ManageWWTPInfluent);
removeParentObjective(DetermineDischargePrices, ObtainDischargeCost);
removeParentObjective(ObtainDischargeReferencePrice, DetermineDischargePrices);
removeParentObjective(ObtainIndustrialWWCharacteristics, DetermineDischargePrices);
removeParentObjective(ObtainInfluentCharacteristics, processInfluent);
removeParentObjective(ObtainPerformanceData, ObtainDischargeReferencePrice);
removeParentObjective(ObtainTreatmentEfficiency, DetermineDischargePrices);
removeParentObjective(treatInfluent, processInfluent);
removeDependencyObjective(D1514, ObtainDischargeReferencePrice);
addObjectiveRole(CalculateIndustrialWWDischargePrices, IndustrialWWDischarger);
addObjectiveRole(CalculateIndustrialWWDischargePrices, WWReceiver);
addObjectiveRole(CalculateIndustrialWWDischargePrices, WWTreater);
addObjectiveRole(ObtainDischargeReferencePrices, IndustrialWWDischarger);
addObjectiveRole(ObtainDischargeReferencePrices, RiverQualityManager);
addObjectiveRole(ObtainDischargeReferencePrices, WWReceiver);
addObjectiveRole(ObtainDischargeReferencePrices, WWTreater);
addObjectiveRole(ObtainWWInfluentCharacteristics, WWReceiver);
addObjectiveRole(ObtainWWInfluentCharacteristics, WWTreater);
addObjectiveRole(TreatInfluent, WWReceiver);
addParentObjective(AssessRiverWaterQuality, ObtainDischargeReferencePrices);
addParentObjective(CalculateIndustrialWWDischargePrices, ManageWWTPInfluent);
addParentObjective(CalculateIndustrialWWDischargePrices, ObtainDischargeCost);
addParentObjective(ObtainDischargeReferencePrices, CalculateIndustrialWWDischargePrices);
addParentObjective(ObtainIndustrialWWCharacteristics, CalculateIndustrialWWDischargePrices);
addParentObjective(ObtainPerformanceData, ObtainDischargeReferencePrices);
addParentObjective(ObtainTreatmentEfficiency, CalculateIndustrialWWDischargePrices);
addParentObjective(ObtainWWCharacteristics, ObtainWWInfluentCharacteristics);
addParentObjective(ObtainWWInfluentCharacteristics, ManageWWTPInfluent);
addParentObjective(TreatInfluent, processInfluent);
addDependency(D1627, Hierarchy, SewageInspector, WWReceiver);
addDependencyObjective(D1514, ObtainDischargeReferencePrices);
addParentObjective(ObtainWWCharacteristics, ObtainIndustrialWWCharacteristics);
removeObjectiveRole(ObtainWWInfluentCharacteristics, WWReceiver);
removeObjectiveRole(ObtainWWInfluentCharacteristics, WWTreater);
removeParentObjective(ObtainWWCharacteristics, ObtainWWInfluentCharacteristics);
removeParentObjective(ObtainWWInfluentCharacteristics, ManageWWTPInfluent);
addObjectiveRole(CollectIndustrialWWDischargeCharacteristics, IndustrialWWDischarger);
addObjectiveRole(CollectWWInfluentCharacteristics, WWReceiver);
addObjectiveRole(CollectWWInfluentCharacteristics, WWTreater);
addParentObjective(CollectWWInfluentCharacteristics, ManageWWTPInfluent);
addParentObjective(ObtainWWCharacteristics, CollectIndustrialWWDischargeCharacteristics);
addParentObjective(ObtainWWCharacteristics, CollectWWInfluentCharacteristics);
removeObjectiveRole(TreatInfluent, WWReceiver);
removeObjectiveRole(bypassInfluent, WWReceiver);
removeObjectiveRole(processInfluent, WWReceiver);
removeParentObjective(TreatInfluent, processInfluent);
removeParentObjective(bypassInfluent, processInfluent);
addObjectiveRole(, WWReceiver);
addDependency(D1715, Hierarchy, SewageInspector, IndustrialWWDischarger);
removeObjectiveRole(, WWReceiver);
removeObjectiveRole(CalculateIndustrialWWInfluentAvailability, WWReceiver);
removeObjectiveRole(CalculateIndustrialWWInfluentAvailability, WWTreater);
removeObjectiveRole(ObtainHouseholdWWCharacteristics, WWReceiver);
removeObjectiveRole(ObtainHouseholdWWCharacteristics, WWTreater);
removeObjectiveRole(ObtainMeteoWWCharacteristics, WWReceiver);
removeObjectiveRole(ObtainMeteoWWCharacteristics, WWTreater);
removeObjectiveRole(ObtainWWTotalLimits, WWReceiver);
removeObjectiveRole(ObtainWWTotalLimits, WWTreater);
removeParentObjective(CalculateIndustrialWWInfluentAvailability, AchieveOptimalPerformance);
removeParentObjective(CalculateIndustrialWWInfluentAvailability, ManageWWTPInfluent);
removeParentObjective(ObtainHouseholdWWCharacteristics, CalculateIndustrialWWInfluentAvailability);
removeParentObjective(ObtainMeteoWWCharacteristics, CalculateIndustrialWWInfluentAvailability);
removeParentObjective(ObtainWWTotalLimits, CalculateIndustrialWWInfluentAvailability);
addObjectiveRole(BypassTreatment, WWReceiver);
addObjectiveRole(EvaluateInfluentDestination, WWReceiver);
addObjectiveRole(TreatInfluent, WWReceiver);
addParentObjective(BypassTreatment, EvaluateInfluentDestination);
addParentObjective(TreatInfluent, EvaluateInfluentDestination);
addDependency(D1729, Hierarchy, WWReceiver, WWTreater);
addDependency(D1730, Hierarchy, WWReceiver, WWTPDischarger);
addDependencyObjective(D1729, TreatInfluent);
addDependencyObjective(D1730, BypassTreatment);
removeObjectiveRole(AssessRiverWaterQuality, WWTreater);
removeObjectiveRole(AssessTreatementPerformance, WWTreater);
removeObjectiveRole(CalculateIndustrialWWDischargePrices, WWTreater);
removeObjectiveRole(CollectRiverSensorsData, WWTreater);
removeObjectiveRole(CollectWWInfluentCharacteristics, WWTreater);
removeObjectiveRole(ManageWWTPInfluent, WWTreater);
removeObjectiveRole(ObtainDischargeReferencePrices, WWTreater);
removeObjectiveRole(ObtainIndustrialWWCharacteristics, WWTreater);
removeObjectiveRole(ObtainPerformanceData, WWTreater);
removeObjectiveRole(ObtainTreatmentEfficiency, WWTreater);
removeParentObjective(AssessTreatementPerformance, AchieveOptimalPerformance);
removeDependency(D1616, Hierarchy, WWReceiver, WWTPDischarger);
addObjectiveRole(CalculateTreatmentEfficiency, WWTreater);
addObjectiveRole(ObtainInfluentCharacteristics, WWTreater);
addParentObjective(CalculateTreatmentEfficiency, AchieveOptimalPerformance);
addParentObjective(ObtainInfluentCharacteristics, CalculateTreatmentEfficiency);
addParentObjective(ObtainWWCharacteristics, ObtainInfluentCharacteristics);
addDependency(D1616, Hierarchy, WWReceiver, WWTreater);
addDependency(D1760, Hierarchy, WWTreater, WWReceiver);
addDependencyObjective(D1760, ObtainInfluentCharacteristics);
addObjectiveRole(ObtainEffluentCharacteristics, WWTreater);
addParentObjective(ObtainEffluentCharacteristics, CalculateTreatmentEfficiency);
addParentObjective(ObtainWWCharacteristics, ObtainEffluentCharacteristics);
addDependency(D1779, Hierarchy, WWTreater, WWTPDischarger);
addDependencyObjective(D1779, ObtainEffluentCharacteristics);
removeObjectiveRole(CalculateWWTPEffluentLimits, RiverQualityManager);
removeObjectiveRole(CalculateWWTPEffluentLimits, WWTPDischarger);
removeObjectiveRole(ObtainPerformanceData, WWTPDischarger);
removeParentObjective(AssessRiverWaterQuality, CalculateWWTPEffluentLimits);
removeParentObjective(CalculateWWTPEffluentLimits, AchieveQualityWater);
removeParentObjective(ObtainMeteoData, CalculateWWTPEffluentLimits);
addObjectiveRole(ObtainWWTPEffluentLimits, RiverQualityManager);
addObjectiveRole(ObtainWWTPEffluentLimits, WWTPDischarger);
addParentObjective(AssessRiverWaterQuality, ObtainWWTPEffluentLimits);
addParentObjective(ObtainMeteoData, ObtainWWTPEffluentLimits);
addParentObjective(ObtainWWTPEffluentLimits, AchieveQualityWater);
addObjectiveRole(DischargeTreatedWW, WWTreater);
addObjectiveRole(DischargeWW, WWTPDischarger);
addDependency(D1827, Hierarchy, WWTreater, WWTPDischarger);
addDependencyObjective(D1827, DischargeTreatedWW);
removeRole(WWDataAcquirer);
removeObjectiveRole(AssessRiverWaterQuality, IndustrialWWDischarger);
removeObjectiveRole(AssessRiverWaterQuality, RiverQualityManager);
removeObjectiveRole(AssessRiverWaterQuality, WWReceiver);
removeObjectiveRole(AssessRiverWaterQuality, WWTPDischarger);
removeObjectiveRole(EnsureEffluentLimits, RiverQualityManager);
removeObjectiveRole(ObtainWWPollutantConcentration, WWDataAcquirer);
removeObjectiveRole(ObtainWWVolume, WWDataAcquirer);
removeParentObjective(AssessRiverWaterQuality, AchieveQualityWater);
removeParentObjective(AssessRiverWaterQuality, ObtainDischargeReferencePrices);
removeParentObjective(AssessRiverWaterQuality, ObtainWWTPEffluentLimits);
removeParentObjective(CollectRiverSensorsData, AssessRiverWaterQuality);
removeParentObjective(EnsureEffluentLimits, AchieveQualityWater);
addRole(HouseholdDataProvider);
addObjectiveRole(CalculateWWTPNewEffluentLimits, RiverQualityManager);
addObjectiveRole(EvaluateRiverWaterQuality, IndustrialWWDischarger);
addObjectiveRole(EvaluateRiverWaterQuality, RiverQualityManager);
addObjectiveRole(EvaluateRiverWaterQuality, WWReceiver);
addObjectiveRole(EvaluateRiverWaterQuality, WWTPDischarger);
addParentObjective(CalculateWWTPNewEffluentLimits, AchieveQualityWater);
addParentObjective(CollectRiverSensorsData, EvaluateRiverWaterQuality);
addParentObjective(EvaluateRiverWaterQuality, AchieveQualityWater);
addParentObjective(EvaluateRiverWaterQuality, CalculateWWTPNewEffluentLimits);
addParentObjective(EvaluateRiverWaterQuality, ObtainDischargeReferencePrices);
addParentObjective(EvaluateRiverWaterQuality, ObtainWWTPEffluentLimits);
addObjectiveRole(CalculateIndustrialWWAvailability, WWReceiver);
addObjectiveRole(ObtainHouseholdWWCharacteristics, WWReceiver);
addObjectiveRole(ObtainMeteoWWCharacteristics, WWReceiver);
addParentObjective(CalculateIndustrialWWAvailability, ManageWWTPInfluent);
addParentObjective(ObtainHouseholdWWCharacteristics, CalculateIndustrialWWAvailability);
addParentObjective(ObtainMeteoWWCharacteristics, CalculateIndustrialWWAvailability);
removeParentObjective(CalculateIndustrialWWAvailability, ManageWWTPInfluent);
addObjectiveRole(CalculateIndustrialWWLimits, WWReceiver);
addObjectiveRole(ObtainMeteoData, WWReceiver);
addObjectiveRole(ObtainWWTPEffluentLimits, WWReceiver);
addParentObjective(CalculateIndustrialWWAvailability, CalculateIndustrialWWLimits);
addParentObjective(CalculateIndustrialWWLimits, ManageWWTPInfluent);
addParentObjective(ObtainTreatmentEfficiency, CalculateIndustrialWWLimits);
addParentObjective(ObtainWWTPEffluentLimits, CalculateIndustrialWWLimits);
addDependency(D1925, Hierarchy, WWReceiver, RiverQualityManager);
addDependencyObjective(D1925, ObtainWWTPEffluentLimits);
removeObjectiveRole(ObtainWWTPEffluentLimits, RiverQualityManager);
removeObjectiveRole(ObtainWWTPEffluentLimits, WWReceiver);
removeObjectiveRole(ObtainWWTPEffluentLimits, WWTPDischarger);
removeParentObjective(EvaluateRiverWaterQuality, ObtainWWTPEffluentLimits);
removeParentObjective(ObtainMeteoData, ObtainWWTPEffluentLimits);
removeParentObjective(ObtainWWTPEffluentLimits, AchieveQualityWater);
removeParentObjective(ObtainWWTPEffluentLimits, CalculateIndustrialWWLimits);
removeDependencyObjective(D1925, ObtainWWTPEffluentLimits);
addObjectiveRole(ObtainWWTPNewEffluentLimits, RiverQualityManager);
addObjectiveRole(ObtainWWTPNewEffluentLimits, WWReceiver);
addObjectiveRole(ObtainWWTPNewEffluentLimits, WWTPDischarger);
addParentObjective(EvaluateRiverWaterQuality, ObtainWWTPNewEffluentLimits);
addParentObjective(ObtainMeteoData, ObtainWWTPNewEffluentLimits);
addParentObjective(ObtainWWTPNewEffluentLimits, AchieveQualityWater);
addParentObjective(ObtainWWTPNewEffluentLimits, CalculateIndustrialWWLimits);
addDependencyObjective(D1925, ObtainWWTPNewEffluentLimits);
removeRole(HouseholdDataProvider);
removeRole(MeteoDataProvider);
removeObjectiveRole(CollectRiverSensorsData, WWTPDischarger);
removeObjectiveRole(EvaluateRiverWaterQuality, WWTPDischarger);
removeObjectiveRole(ObtainMeteoData, MeteoDataProvider);
removeObjectiveRole(ObtainMeteoData, RiverQualityManager);
removeObjectiveRole(ObtainMeteoData, WWReceiver);
removeObjectiveRole(ObtainMeteoData, WWTPDischarger);
removeObjectiveRole(ObtainWWTPNewEffluentLimits, RiverQualityManager);
removeObjectiveRole(ObtainWWTPNewEffluentLimits, WWReceiver);
removeObjectiveRole(ObtainWWTPNewEffluentLimits, WWTPDischarger);
removeObjectiveRole(obtainDischargeAgreement, SewageInspector);
removeObjectiveRole(obtainDischargePollutantLoads, SewageInspector);
removeObjectiveRole(obtainDischargeVolume, SewageInspector);
removeParentObjective(EvaluateRiverWaterQuality, ObtainWWTPNewEffluentLimits);
removeParentObjective(ObtainMeteoData, ObtainWWTPNewEffluentLimits);
removeParentObjective(ObtainWWTPNewEffluentLimits, AchieveQualityWater);
removeParentObjective(ObtainWWTPNewEffluentLimits, CalculateIndustrialWWLimits);
removeParentObjective(obtainDischargeAgreement, VerifyDischarge);
removeParentObjective(obtainDischargePollutantLoads, VerifyDischarge);
removeParentObjective(obtainDischargeVolume, VerifyDischarge);
removeDependencyObjective(D1925, ObtainWWTPNewEffluentLimits);
addObjectiveRole(ObtainIndustrialWWDischargeCharacteristics, SewageInspector);
addObjectiveRole(ObtainWWTPInfluentCharacteristics, SewageInspector);
addParentObjective(ObtainIndustrialWWDischargeCharacteristics, VerifyDischarge);
addParentObjective(ObtainWWTPInfluentCharacteristics, VerifyDischarge);
addDependencyObjective(D1627, ObtainWWTPInfluentCharacteristics);
addDependencyObjective(D1715, ObtainIndustrialWWDischargeCharacteristics);
addObjectiveRole(ObtainWWTPNewEffluentLimits, WWReceiver);
addParentObjective(ObtainWWTPNewEffluentLimits, CalculateIndustrialWWLimits);
addDependencyObjective(D1925, ObtainWWTPNewEffluentLimits);
removeObjectiveRole(CalculateIndustrialWWDischargePrices, IndustrialWWDischarger);
removeObjectiveRole(ObtainIndustrialWWCharacteristics, IndustrialWWDischarger);
removeObjectiveRole(ObtainTreatmentEfficiency, IndustrialWWDischarger);
removeParentObjective(CalculateIndustrialWWDischargePrices, ObtainDischargeCost);
addParentObjective(ObtainDischargeCost, AssessAmountOfIndustrialWWDischarge);
addParentObjective(ObtainDischargeReferencePrices, ObtainDischargeCost);
addDependency(D20, Hierarchy, IndustrialWWDischarger, RiverQualityManager);
addDependencyObjective(D20, ObtainDischargeReferencePrices);
removeObjectiveRole(BypassTreatment, WWReceiver);
removeObjectiveRole(ObtainDischargeCost, IndustrialWWDischarger);
removeParentObjective(BypassTreatment, EvaluateInfluentDestination);
removeParentObjective(ObtainDischargeCost, AssessAmountOfIndustrialWWDischarge);
removeParentObjective(ObtainDischargeReferencePrices, ObtainDischargeCost);
removeParentObjective(ObtainWWCharacteristics, ObtainDischargeCost);
removeDependencyObjective(D1730, BypassTreatment);
addObjectiveRole(AssessAmountOfIndustrialWWDischarge, IndustrialWWRetainer);
addObjectiveRole(Bypass, WWReceiver);
addObjectiveRole(CollectRiverSensorsData, IndustrialWWRetainer);
addObjectiveRole(EvaluateRiverWaterQuality, IndustrialWWRetainer);
addObjectiveRole(ObtainDischargeReferencePrices, IndustrialWWRetainer);
addObjectiveRole(ObtainDischargeReservedCost, IndustrialWWDischarger);
addObjectiveRole(ObtainDischargeReservedCost, IndustrialWWRetainer);
addObjectiveRole(ObtainInfluentCharacteristics, WWReceiver);
addObjectiveRole(ObtainPerformanceData, IndustrialWWRetainer);
addObjectiveRole(ObtainWWCharacteristics, IndustrialWWRetainer);
addObjectiveRole(ObtainWWPollutantConcentration, IndustrialWWRetainer);
addObjectiveRole(ObtainWWVolume, IndustrialWWRetainer);
addParentObjective(AssessAmountOfIndustrialWWDischarge, DischargeIndustrialWW);
addParentObjective(Bypass, EvaluateInfluentDestination);
addParentObjective(ObtainDischargeReferencePrices, ObtainDischargeReservedCost);
addParentObjective(ObtainDischargeReservedCost, AssessAmountOfIndustrialWWDischarge);
addParentObjective(ObtainInfluentCharacteristics, EvaluateInfluentDestination);
addParentObjective(ObtainWWCharacteristics, ObtainDischargeReservedCost);
addDependencyObjective(D1730, Bypass);
removeParentObjective(CollectWWInfluentCharacteristics, ManageWWTPInfluent);
removeParentObjective(ObtainIndustrialWWCharacteristics, ManageWWTPInfluent);
removeObjectiveRole(AchieveQualityWater, RiverQualityManager);
removeObjectiveRole(EvaluateRiverWaterQuality, IndustrialWWDischarger);
removeObjectiveRole(EvaluateRiverWaterQuality, IndustrialWWRetainer);
removeObjectiveRole(EvaluateRiverWaterQuality, RiverQualityManager);
removeObjectiveRole(EvaluateRiverWaterQuality, WWReceiver);
removeParentObjective(CalculateWWTPNewEffluentLimits, AchieveQualityWater);
removeParentObjective(CollectRiverSensorsData, EvaluateRiverWaterQuality);
removeParentObjective(EvaluateRiverWaterQuality, AchieveQualityWater);
removeParentObjective(EvaluateRiverWaterQuality, CalculateWWTPNewEffluentLimits);
removeParentObjective(EvaluateRiverWaterQuality, ObtainDischargeReferencePrices);
addObjectiveRole(AssessRiverWaterQuality, RiverQualityManager);
addObjectiveRole(CalculateRiverWaterQuality, IndustrialWWDischarger);
addObjectiveRole(CalculateRiverWaterQuality, IndustrialWWRetainer);
addObjectiveRole(CalculateRiverWaterQuality, RiverQualityManager);
addObjectiveRole(CalculateRiverWaterQuality, WWReceiver);
addObjectiveRole(EnforceWaterQualityPolicies, RiverQualityManager);
addObjectiveRole(VerifyDischarge, RiverQualityManager);
addObjectiveRole(VerifyWWTPEffluent, RiverQualityManager);
addParentObjective(AssessRiverWaterQuality, EnforceWaterQualityPolicies);
addParentObjective(CalculateRiverWaterQuality, AssessRiverWaterQuality);
addParentObjective(CalculateRiverWaterQuality, CalculateWWTPNewEffluentLimits);
addParentObjective(CalculateRiverWaterQuality, ObtainDischargeReferencePrices);
addParentObjective(CalculateWWTPNewEffluentLimits, AssessRiverWaterQuality);
addParentObjective(CollectRiverSensorsData, CalculateRiverWaterQuality);
addParentObjective(VerifyDischarge, EnforceWaterQualityPolicies);
addDependency(D109, Hierarchy, RiverQualityManager, SewageInspector);
addDependency(D110, Hierarchy, RiverQualityManager, WWTPDischarger);
addDependencyObjective(D109, VerifyDischarge);
addDependencyObjective(D110, VerifyWWTPEffluent);
removeObjectiveRole(AchieveOptimalPerformance, WWTreater);
removeObjectiveRole(CollectRiverSensorsData, IndustrialWWDischarger);
removeObjectiveRole(CollectRiverSensorsData, IndustrialWWRetainer);
removeObjectiveRole(CollectRiverSensorsData, RiverQualityManager);
removeObjectiveRole(CollectRiverSensorsData, WWReceiver);
removeObjectiveRole(ObtainPerformanceData, IndustrialWWDischarger);
removeObjectiveRole(ObtainPerformanceData, IndustrialWWRetainer);
removeObjectiveRole(ObtainPerformanceData, RiverQualityManager);
removeObjectiveRole(ObtainPerformanceData, WWReceiver);
removeParentObjective(CalculateTreatmentEfficiency, AchieveOptimalPerformance);
removeParentObjective(CollectRiverSensorsData, CalculateRiverWaterQuality);
removeParentObjective(ObtainPerformanceData, ObtainDischargeReferencePrices);
addObjective(AchieveAdequatePerformance, isEfficent(InfluentCharacteristics, EffluentCharacteristics));
addObjective(AssessAmountOfIndustrialWWDischarge, VolumetricDischargeCalculated(ww) ? isIndustrialWW(ww));
addObjective(AssessMeteoWWDestination, MeteoDestinationEvaluated);
addObjective(CalculateRiverWaterQuality, riverSensorsReaded ? qualityValuesValidated ? qualityIndexCalculated);
addObjective(CalculateTreatmentEfficiency, isEfficent(InfluentCharacteristics, EffluentCharacteristics));
addObjective(CollectRiverSensorData, isSensor(s) ? sensorDataCollected(s));
addObjective(DischargeHouseholdWW, isHouseholdWW(ww) ? dischargedInSewer(ww));
addObjective(DischargeIndustrialWW, isIndustrialWW(ww) ? dischargeInSewer(VolumetricDischargeCalculated(ww)));
addObjective(DischargeMeteoWW, isMeteoWW(ww) ? dischargeInSewer(ww));
addObjective(HouseholdWWGeneration, isHouseholdWW(WWGenerated()));
addObjective(IndustrialWWGeneration, [isIndustrialWW(WWGenerated())] ? [profitProduced]);
addObjective(MakeProfit, profitProduced);
addObjective(ObtainDischargeReferencePrices, DischargePricesCalculated);
addObjective(ObtainDischargeReservedCost, reservedCostCalculated(referenceDischargePrice, WWVolume, WWPollutantConcentration));
addObjective(ObtainEffluentCharacteristics, [WWPollutantConcentrationObtained(ww) ? WWVolumeObtained(ww)] ? [isEffluent(ww)]);
addObjective(ObtainInfluentCharacteristics, [WWPollutantConcentrationObtained(ww) ? WWVolumeObtained(ww)] ? [isInffluent(ww)]);
addObjective(ObtainMeteoData, MeteoDataObtained);
addObjective(ObtainMeteoWWCharacteristics, [WWPollutantConcentrationObtained(ww) ? WWVolumeObtained(ww)] ? [isMeteoWW(ww)]);
addObjective(ObtainWWCharacteristics, WWPollutantConcentrationObtained(ww) ? WWVolumeObtained(ww));
addObjective(ObtainWWPollutantConcentration, WWPolllutantConcentrationObtained(ww));
addObjective(ObtainWWVolume, WWVolumeObtained(ww));
addObjective(StoreIndustrialWW, [WWStored(ww)] ? [isIndustrialWW(ww)]);
addObjective(StoreWW, WWStored);
addObjective(WWTreatment, WWTreated);
addObjective(dischargeBypass, [bypassOpened] ? [dischargedInRiver(ww)]);
addObjective(dischargeTreatedWW, dischargedInRiver(ww) ? isTreated(ww));
addObjectiveRole(AchieveAdequatePerformance, WWTreater);
addObjectiveRole(CollectRiverSensorData, IndustrialWWDischarger);
addObjectiveRole(CollectRiverSensorData, IndustrialWWRetainer);
addObjectiveRole(CollectRiverSensorData, RiverQualityManager);
addObjectiveRole(CollectRiverSensorData, WWReceiver);
addParentObjective(CalculateTreatmentEfficiency, AchieveAdequatePerformance);
addParentObjective(CollectRiverSensorData, CalculateRiverWaterQuality);
